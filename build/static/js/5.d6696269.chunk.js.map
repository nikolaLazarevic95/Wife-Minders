{"version":3,"sources":["components/UI/Card.module.css","components/Reminders/ReminderForm.module.css","components/UI/Card.js","components/Reminders/ReminderForm.js","pages/NewReminder.js"],"names":["module","exports","card","form","loading","control","actions","Card","props","react_default","a","createElement","className","classes","children","ReminderForm","_useState","useState","_useState2","Object","slicedToArray","isEntering","setIsEntering","textInputRef","useRef","react","react_router","when","message","location","UI_Card","onFocus","onSubmit","event","preventDefault","enteredText","current","value","onAddReminder","text","isLoading","LoadingSpinner","htmlFor","id","rows","ref","onClick","NewReminder","_useHttp","useHttp","addReminder","sendRequest","status","history","useHistory","useEffect","push","Reminders_ReminderForm","reminderData"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,wCCAlBF,EAAAC,QAAA,CAAkBE,KAAA,2BAAAC,QAAA,8BAAAC,QAAA,8BAAAC,QAAA,2HCMHC,EAJF,SAACC,GACZ,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,MAAOM,EAAMM,oCC+C/BC,EA5CM,SAACP,GAAU,IAAAQ,EACKC,oBAAS,GADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBK,EADuBH,EAAA,GACXI,EADWJ,EAAA,GAExBK,EAAeC,mBAmBrB,OACEf,EAAAC,EAAAC,cAACc,EAAA,SAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,KAAMN,EAAYO,QAAS,SAACC,GAAD,MAAa,yEAClDpB,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQV,KAAM4B,QARV,WACvBT,GAAc,IAO8CU,SArB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAcZ,EAAaa,QAAQC,MAIzC7B,EAAM8B,cAAc,CAAGC,KAAMJ,MAexB3B,EAAMgC,WACL/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,SACtBK,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,OAGJhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,SACtBI,EAAAC,EAAAC,cAAA,SAAO+B,QAAQ,QAAf,QACAjC,EAAAC,EAAAC,cAAA,YAAUgC,GAAG,OAAOC,KAAK,IAAIC,IAAKtB,KAEpCd,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQP,SACtBG,EAAAC,EAAAC,cAAA,UAAQmC,QAtBc,WAC5BxB,GAAc,IAqBgCV,UAAU,OAAlD,qCCdKmC,UAtBK,WAAM,IAAAC,EACQC,YAAQC,KAAhCC,EADgBH,EAChBG,YAAaC,EADGJ,EACHI,OACfC,EAAUC,cAEhBC,oBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,eAEd,CAACJ,EAAQC,IAMZ,OACE5C,EAAAC,EAAAC,cAAC8C,EAAD,CACEjB,UAAsB,YAAXY,EACXd,cAPuB,SAACoB,GAC1BP,EAAYO","file":"static/js/5.d6696269.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3R1ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ReminderForm_form__1siF7\",\"loading\":\"ReminderForm_loading__3_LT2\",\"control\":\"ReminderForm_control__12IwM\",\"actions\":\"ReminderForm_actions__2Wn9A\"};","import React from 'react'\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react'\r\nimport { useRef,Fragment ,useState} from 'react';\r\nimport {Prompt } from 'react-router-dom'\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './ReminderForm.module.css';\r\n\r\nconst ReminderForm = (props) => {\r\n  const [isEntering, setIsEntering] =useState(false)\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddReminder({  text: enteredText });\r\n  }\r\n\r\n  const finishEnteringHandler = ()   => {\r\n    setIsEntering(false);\r\n  }\r\n  const formFocusHandler = ()  => {\r\n    setIsEntering(true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Prompt when={isEntering} message={(location)=> 'Are you sure you want to leave? All your entered data will be lost!'}/>\r\n    <Card>\r\n      <form className={classes.form} onFocus={formFocusHandler} onSubmit={submitFormHandler}>\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        <div className={classes.control}>\r\n          <label htmlFor='text'>Text</label>\r\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button onClick={finishEnteringHandler} className='btn'>Add Reminder</button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReminderForm;","import React from 'react'\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReminderForm from \"../components/Reminders/ReminderForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addReminder } from \"../lib/api\";\r\n\r\nconst NewReminder = () => {\r\n  const { sendRequest, status } = useHttp(addReminder);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/reminders\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addReminderHandler = (reminderData) => {\r\n    sendRequest(reminderData);\r\n  };\r\n\r\n  return (\r\n    <ReminderForm\r\n      isLoading={status === \"pending\"}\r\n      onAddReminder={addReminderHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NewReminder;\r\n"],"sourceRoot":""}